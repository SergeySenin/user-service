# docker-compose.yml — локальный офлайн-стенд для профиля `local`.
# Назначение: поднять те же инфраструктурные сервисы, что в проде (PostgreSQL, Redis, S3-совместимый MinIO),
# чтобы приложение работало без интернета после предварительного прогрева образов.
# Синхронизация версий: теги образов должны совпадать с install.sh.
# Данные сохраняются в именованных томах; порты проброшены на localhost для простых проверок.

services:
  db:
    image: postgres:16.3                 # пин: как в тестах и проде
    restart: unless-stopped
    stop_grace_period: 30s               # корректное завершение Postgres
    environment:
      POSTGRES_DB: user_service
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      TZ: UTC
    ports:
      - "5432:5432"                      # jdbc:postgresql://localhost:5432/user_service
    volumes:
      - postgres_data:/var/lib/postgresql/data  # персистентность данных
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d user_service"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7.2-alpine              # пин: лёгкий alpine-тег
    restart: unless-stopped
    environment:
      TZ: UTC
    command: ["redis-server", "--appendonly", "yes"]   # AOF=устойчивость на локалке
    ports:
      - "6379:6379"                      # spring.data.redis.host=localhost, port=6379
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 3s
      retries: 20

  minio:
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z   # пин: тот же, что в install.sh
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: local
      MINIO_ROOT_PASSWORD: localpassword
      TZ: UTC
    command: server /data --console-address ":9001"   # :9000=S3 API, :9001=веб-консоль
    ports:
      - "9000:9000"                      # services.s3.endpoint=http://127.0.0.1:9000
      - "9001:9001"
    volumes:
      - miniodata:/data
    # Healthcheck опущен: образ не гарантирует наличие curl/wget; готовность проверяет сервис mc ниже.

  mc:
    image: minio/mc:RELEASE.2024-10-08T09-37-26Z
    restart: "no"
    depends_on:
      - minio                                        # порядок запуска; готовность — через цикл ниже
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set local http://minio:9000 local localpassword)
      do echo 'mc: waiting for minio...' && sleep 2; done &&
      /usr/bin/mc mb -p local/corpbucket || true &&
      /usr/bin/mc policy set public local/corpbucket || true &&
      echo 'MinIO bucket corpbucket ready'
      "

volumes:
  postgres_data:
  redisdata:
  miniodata:
