name: Continuous Integration Pipeline

on:
  push:
    branches: ["main"]
  pull_request:

permissions:
  contents: read
  issues: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    env:
      CI: true
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Run Gradle build
        run: ./gradlew build --no-daemon --stacktrace

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test
          if-no-files-found: warn

      - name: Upload Checkstyle reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: build/reports/checkstyle
          if-no-files-found: warn

      - name: Upload JaCoCo HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: build/reports/jacoco/test/html
          if-no-files-found: warn

      - name: Comment on pull request when build fails
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pullRequestNumber = context.issue?.number;
            if (!pullRequestNumber) {
              core.warning('Pull request не обнаружен в контексте события, комментарий пропущен.');
              return;
            }

            const commentLines = [
              '⚠️ Процесс непрерывной интеграции в GitHub Actions завершился с ошибкой.',
              'Изучите журналы Gradle и приложенные артефакты (отчёты тестов, Checkstyle, JaCoCo).',
              'После исправлений перезапустите проверку; этот комментарий останется для истории.'
            ];
            
            try {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pullRequestNumber,
                body: commentLines.join('\n')
              });
            } catch (error) {
              if (error.status === 403) {
                core.warning(`Нет прав на добавление комментария к pull request: ${error.message}`);
              } else {
                throw error;
              }
            }

  docker-build:
    name: Docker image build
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build --file Dockerfile --tag user-service:test .
